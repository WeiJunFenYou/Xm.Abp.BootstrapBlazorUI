@using Microsoft.Extensions.Logging
@using Microsoft.Extensions.Options
@using System.Reflection
@using System.Diagnostics.CodeAnalysis
@using Volo.Abp
@using Xm.Abp.AspnetCore.Components.Web.BootstrapBlazorTheme.Routing
@using Xm.Abp.AspnetCore.Components.Web.BootstrapBlazorTheme.Settings
@inherits LayoutComponentBase
@inject IOptions<AbpRouterOptions> RouterOptions
@inject SwalService SwalService

<Layout SideWidth="0" IsPage="true" IsFullSide="false" IsFixedHeader="true"
        ShowCollapseBar="false" OnCollapsed="collapsed => OnCollapse(collapsed)"
        AdditionalAssemblies="RouterOptions.Value.AdditionalAssemblies.Select(p=>p.As<Assembly>()).Union(new List<Assembly>{RouterOptions.Value.AppAssembly})"
        class="@LayoutClassString">
    <Header>
        <Branding Collapsed="@Collapsed" />
        @if (MenuPlacement == MenuPlacement.Top)
        {
            <Menu Items="@MenuItems"></Menu>
        }
        <div class="flex-fill my-2"></div>
        <NavToolbar />
    </Header>
    <Side>
        @if (MenuPlacement == MenuPlacement.Left)
        {
            <div class="scroll">
                <Menu Items="@MenuItems" IsVertical="true" class="mt-2"></Menu>
            </div>
        }
    </Side>
    <Main>
        <ErrorLogger OnErrorHandleAsync="OnErrorHandleAsync">
            @Body
        </ErrorLogger>
    </Main>
</Layout>

<HeadContent>
    @if (Theme == BootstrapBlazorThemes.Metronic)
    {
        <link href="_content/BootstrapBlazor/css/motronic.min.css" rel="stylesheet" />
        <link href="_content/Xm.Abp.AspnetCore.Components.Web.BootstrapBlazorTheme/libs/abp/css/motronic.css" rel="stylesheet" />
    }
</HeadContent>

@code
{
    private async Task OnErrorHandleAsync(ILogger logger, Exception ex)
    {
        if (ex is UserFriendlyException)
        {
            await SwalService.Show(new SwalOption
                {
                    Category = SwalCategory.Warning,
                    Title = ex.Message,
                });
        }
        else
        {
            //BootstrapBlazor弹窗函数
            await SwalService.Show(new SwalOption
                {
                    Category = SwalCategory.Error,
                    Title = "服务器内部错误",
                    Content = ex.Message,
                });

            //Abp弹窗函数 Volo.Abp.AspNetCore.Components.Messages IUiMessageService MessageService
            // await MessageService.Error(ex.Message, "服务器内部错误");
        }
    }
}
